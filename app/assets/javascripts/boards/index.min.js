!function a(b,c,d){function e(g,h){if(!c[g]){if(!b[g]){var i="function"==typeof require&&require;if(!h&&i)return i(g,!0);if(f)return f(g,!0);var j=new Error("Cannot find module '"+g+"'");throw j.code="MODULE_NOT_FOUND",j}var k=c[g]={exports:{}};b[g][0].call(k.exports,function(a){var c=b[g][1][a];return e(c?c:a)},k,k.exports,a,b,c,d)}return c[g].exports}for(var f="function"==typeof require&&require,g=0;g<d.length;g++)e(d[g]);return e}({1:[function(a,b,c){"use strict";var d=a("../viewmodel/boards/index.js"),e=new d;e.listBoard(),ko.applyBindings(e)},{"../viewmodel/boards/index.js":5}],2:[function(a,b,c){var d=function(){this.apiUrl};d.prototype.search=function(){var a=$.Deferred();return $.ajax({url:this.apiUrl}).done(function(b){a.resolve(b)}).fail(function(b){a.reject(b)}),a.promise()},d.prototype.create=function(a){var b=$.Deferred();return $.ajax({url:this.apiUrl,method:"POST",contentType:"application/json",data:a}).done(function(a){b.resolve(a)}).fail(function(a){b.reject(a)}),b.promise()},d.prototype.edit=function(a,b){var c=$.Deferred();return $.ajax({url:this.apiUrl+"/"+a,method:"PATCH",contentType:"application/json",data:b}).done(function(a){c.resolve(a)}).fail(function(a){c.reject(a)}),c.promise()},d.prototype["delete"]=function(a){var b=$.Deferred();return $.ajax({url:this.apiUrl+"/"+a,method:"DELETE"}).done(function(a){b.resolve(a)}).fail(function(a){b.reject(a)}),b.promise()},b.exports=d},{}],3:[function(a,b,c){var d=a("./basemodel.js"),e=function(a,b,c){this.id=ko.observable(a),this.subject=ko.observable(b),this.priority=ko.observable(c),this.groups=ko.observableArray(),this.apiUrl="/api/v1/boards"};e.prototype=d.prototype,b.exports=e},{"./basemodel.js":2}],4:[function(a,b,c){var d=function(){this.alertSuccessMessage=ko.observable(),this.alertErrorMessage=ko.observable()};b.exports=d},{}],5:[function(a,b,c){var d=a("../baseviewmodel.js"),e=a("../../model/board.js"),f=function(){var a=this;a.board=new e(null,null,null,null),a.boards=ko.observableArray(),a.selectedBoard,a.baseViewModel=new d,a.listBoard=function(){a.board.search().done(function(b){a.boards(b.map(function(a){return new e(a.id,a.subject,a.priority)}))}).fail(function(a){console.log(a)})}.bind(a),a.openBoardModal=function(){a.board.id(null),a.board.subject(null),a.board.priority(null),$("#boardModal").modal("show")}.bind(a),a.findBoard=function(b){a.selectedBoard=b,a.board.id(b.id()),a.board.subject(b.subject()),$("#boardModal").modal("show")}.bind(a),a.createBoard=function(){a.board.create(ko.toJSON({board:a.board})).done(function(b){console.log(b),a.boards.push(new e(b.id,b.subject,b.priority)),$("#boardModal").modal("hide"),a.baseViewModel.alertSuccessMessage("success")}).fail(function(b){console.log(b),a.baseViewModel.alertErrorMessage("error")})}.bind(a),a.editBoard=function(){a.board.edit(a.board.id(),ko.toJSON({board:a.board})).done(function(b){console.log(b),a.selectedBoard.subject(b.subject),$("#boardModal").modal("hide"),a.baseViewModel.alertSuccessMessage("success")}).fail(function(b){console.log(b),a.baseViewModel.alertErrorMessage("error")})}.bind(a),a.deleteBoard=function(){a.board["delete"](a.selectedBoard.id()).done(function(b){console.log(b),a.boards.remove(a.selectedBoard),$("#boardModal").modal("hide"),a.baseViewModel.alertSuccessMessage("success")}).fail(function(b){console.log(b),a.baseViewModel.alertErrorMessage("error")})}.bind(a)};b.exports=f},{"../../model/board.js":3,"../baseviewmodel.js":4}]},{},[1]);
//# sourceMappingURL=index.min.js.map